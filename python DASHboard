import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from dash import Dash, dcc, html, Input, Output 

euro_usd = pd.read_excel('euro_usd.xlsx')
euro_usd = euro_usd.iloc[:,[0,5,6]]
euro_usd = euro_usd.rename(columns={'eur_stopa':'EUR/PLN', 'usd_stopa':'USD/PLN'})
euro_usd.head()

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']
colors = {
    'background': '#111111',
    'text': 'MediumPurple',
    'text2': 'Thistle'
}

def years(self):
        return [{"label": self.years[i], "value": i} for i in range(len(self.years))]

app = Dash(__name__, external_stylesheets=external_stylesheets)

app.layout = html.Div(style={'backgroundColor': colors['background']}, 
    children=[
        html.Div(
            className="row",
            children=[
                html.Div(
                    className="four columns div-user-controls",
                    children=[
                        html.H2("DASH - stopy strat akcji", style={
            'textAlign': 'center',
            'color': colors['text']
        }),
                        html.P("""Wizualizacja szeregu czasowego z Plotly - Dash""", style={
            'textAlign': 'center',
            'color': colors['text']
        }),
                        html.P("""Wybierz z listy akcje, które chcesz zobaczyć.""", style={
            'textAlign': 'center',
            'color': colors['text']
        }),
                    ],
                ),
                html.Div(
                    className="eight columns div-for-charts bg-grey",
                    children=[
                        
      dcc.Graph(id="time_series"
             ),
                        
      dcc.Checklist(
        id='stock',
        options=[{"label": x, "value": x} 
                 for x in euro_usd.columns[1:]],
        value=[euro_usd.columns[1], euro_usd.columns[2]],
        style={"color":"White"},
        labelStyle={'display': 'inline-block'}
    ),

                                               
    
                    ],
                ),
            ],
        )                        
    ]
)

        
        
@app.callback(
    Output("time_series", "figure"), 
    [Input("stock", "value")])

def display_time_series(stock):
    fig = px.line(euro_usd, x='Data', y=stock, hover_data={"Data": "|%B %d, %Y"},
                  title='Stopy strat EUR/PLN i USD/PLN w latach 2018-2020')

    fig.update_layout({"plot_bgcolor": "rgba(1, 1, 1, 1)", "paper_bgcolor": "rgba(1, 1, 1, 1)", 'font':{
                    'color': colors['text2']}})
    fig.update_yaxes(title='Stopy strat')
    fig.update_xaxes(dtick="M2",tickformat="%b\n%Y", rangeslider_visible=True,
        rangeselector=dict(
        buttons=list([
            dict(count=1, label="1m", step="month", stepmode="backward"),
            dict(count=6, label="6m", step="month", stepmode="backward"),
            dict(count=1, label="YTD", step="year", stepmode="todate"),
            dict(count=1, label="1y", step="year", stepmode="backward"),
            dict(step="all")
        ])
    ))
    return fig

if __name__ == '__main__':
    app.run_server(debug=False)
